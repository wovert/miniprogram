"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var book_1 = require("../../models/book");
var like_1 = require("../../models/like");
var bookModel = new book_1.BookModel();
var likeModel = new like_1.LikeModel();
Page({
    data: {
        comments: [],
        book: null,
        likeStatus: false,
        likeCount: 0,
        posting: false
    },
    onLoad: function (options) {
        var _this = this;
        wx.showLoading();
        var bid = options.bid;
        var detail = bookModel.getDetail(bid);
        var comments = bookModel.getComments(bid);
        var likeStatus = bookModel.getLikeStatus(bid);
        Promise.all([detail, comments, likeStatus]).then(function (res) {
            _this.setData({
                book: res[0],
                comments: res[1].comments,
                likeStatus: res[2].like_status,
                likeCount: res[2].fav_nums
            });
            wx.hideLoading();
        });
    },
    onLike: function (event) {
        var likeOrCancle = event.detail.behavior;
        console.log(this.data.book);
        likeModel.like(likeOrCancle, this.data.book.id, 400);
    },
    onFakePost: function (event) {
        this.setData({
            posting: true
        });
    },
    onCancel: function (event) {
        this.setData({
            posting: false
        });
    },
    onPost: function (event) {
        var _this = this;
        var comment = event.detail.text || event.detail.value;
        if (!comment) {
            return;
        }
        if (comment.length > 12) {
            wx.showToast({
                title: '短评最多12个字',
                icon: 'none'
            });
            return;
        }
        bookModel.postComment(this.data.book.id, comment).then(function (res) {
            wx.showToast({
                title: '+ 1',
                icon: 'none'
            });
            _this.data.comments.unshift({
                content: comment,
                nums: 1
            });
            _this.setData({
                comments: _this.data.comments,
                posting: false
            });
        });
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vay1kZXRhaWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJib29rLWRldGFpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDBDQUE2QztBQUM3QywwQ0FBNkM7QUFDN0MsSUFBTSxTQUFTLEdBQVEsSUFBSSxnQkFBUyxFQUFFLENBQUE7QUFDdEMsSUFBTSxTQUFTLEdBQVEsSUFBSSxnQkFBUyxFQUFFLENBQUE7QUFFdEMsSUFBSSxDQUFDO0lBQ0gsSUFBSSxFQUFFO1FBQ0osUUFBUSxFQUFFLEVBQUU7UUFDWixJQUFJLEVBQUUsSUFBSTtRQUNWLFVBQVUsRUFBRSxLQUFLO1FBQ2pCLFNBQVMsRUFBRSxDQUFDO1FBQ1osT0FBTyxFQUFFLEtBQUs7S0FDZjtJQUtELE1BQU0sRUFBRSxVQUFVLE9BQVk7UUFBdEIsaUJBcUNQO1FBcENDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtRQUNoQixJQUFNLEdBQUcsR0FBVyxPQUFPLENBQUMsR0FBRyxDQUFBO1FBQy9CLElBQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDdkMsSUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQTtRQUMzQyxJQUFNLFVBQVUsR0FBRyxTQUFTLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBSS9DLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsR0FBUTtZQUN4RCxLQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNYLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNaLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUTtnQkFDekIsVUFBVSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXO2dCQUM5QixTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVE7YUFDM0IsQ0FBQyxDQUFBO1lBQ0YsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFBO1FBQ2xCLENBQUMsQ0FBQyxDQUFBO0lBb0JKLENBQUM7SUFFRCxNQUFNLEVBQU4sVUFBUSxLQUFVO1FBQ2hCLElBQU0sWUFBWSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFBO1FBQzFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtRQUMzQixTQUFTLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUE7SUFDdEQsQ0FBQztJQUVELFVBQVUsRUFBVixVQUFZLEtBQVU7UUFDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLE9BQU8sRUFBRSxJQUFJO1NBQ2QsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELFFBQVEsRUFBUixVQUFVLEtBQVU7UUFDbEIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNYLE9BQU8sRUFBRSxLQUFLO1NBQ2YsQ0FBQyxDQUFBO0lBQ0osQ0FBQztJQUVELE1BQU0sRUFBTixVQUFRLEtBQVU7UUFBbEIsaUJBOEJDO1FBN0JDLElBQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFBO1FBRXZELElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixPQUFNO1NBQ1A7UUFFRCxJQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsRUFBRSxFQUFFO1lBQ3ZCLEVBQUUsQ0FBQyxTQUFTLENBQUM7Z0JBQ1gsS0FBSyxFQUFFLFVBQVU7Z0JBQ2pCLElBQUksRUFBRSxNQUFNO2FBQ2IsQ0FBQyxDQUFBO1lBQ0YsT0FBTTtTQUNQO1FBQ0QsU0FBUyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsR0FBUTtZQUM5RCxFQUFFLENBQUMsU0FBUyxDQUFDO2dCQUNYLEtBQUssRUFBRSxLQUFLO2dCQUNaLElBQUksRUFBRSxNQUFNO2FBQ2IsQ0FBQyxDQUFBO1lBRUYsS0FBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDO2dCQUN6QixPQUFPLEVBQUUsT0FBTztnQkFDaEIsSUFBSSxFQUFFLENBQUM7YUFDUixDQUFDLENBQUE7WUFFRixLQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNYLFFBQVEsRUFBRyxLQUFJLENBQUMsSUFBSSxDQUFDLFFBQVE7Z0JBQzdCLE9BQU8sRUFBRSxLQUFLO2FBQ2YsQ0FBQyxDQUFBO1FBQ0osQ0FBQyxDQUFDLENBQUE7SUFDSixDQUFDO0lBS0QsT0FBTyxFQUFFO0lBRVQsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFLRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBS0QsUUFBUSxFQUFFO0lBRVYsQ0FBQztJQUtELGlCQUFpQixFQUFFO0lBRW5CLENBQUM7SUFLRCxhQUFhLEVBQUU7SUFFZixDQUFDO0lBS0QsaUJBQWlCLEVBQUU7SUFFbkIsQ0FBQztDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvb2tNb2RlbCB9IGZyb20gJy4uLy4uL21vZGVscy9ib29rJ1xuaW1wb3J0IHsgTGlrZU1vZGVsIH0gZnJvbSAnLi4vLi4vbW9kZWxzL2xpa2UnXG5jb25zdCBib29rTW9kZWw6IGFueSA9IG5ldyBCb29rTW9kZWwoKVxuY29uc3QgbGlrZU1vZGVsOiBhbnkgPSBuZXcgTGlrZU1vZGVsKClcblxuUGFnZSh7XG4gIGRhdGE6IHtcbiAgICBjb21tZW50czogW10sXG4gICAgYm9vazogbnVsbCxcbiAgICBsaWtlU3RhdHVzOiBmYWxzZSxcbiAgICBsaWtlQ291bnQ6IDAsXG4gICAgcG9zdGluZzogZmFsc2VcbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLliqDovb1cbiAgICovXG4gIG9uTG9hZDogZnVuY3Rpb24gKG9wdGlvbnM6IGFueSkge1xuICAgIHd4LnNob3dMb2FkaW5nKClcbiAgICBjb25zdCBiaWQ6IG51bWJlciA9IG9wdGlvbnMuYmlkXG4gICAgY29uc3QgZGV0YWlsID0gYm9va01vZGVsLmdldERldGFpbChiaWQpXG4gICAgY29uc3QgY29tbWVudHMgPSBib29rTW9kZWwuZ2V0Q29tbWVudHMoYmlkKVxuICAgIGNvbnN0IGxpa2VTdGF0dXMgPSBib29rTW9kZWwuZ2V0TGlrZVN0YXR1cyhiaWQpXG5cbiAgICAvLyBQcm9taXNlLmFsbDog5bm26KGM5aSa5Liq6K+35rGC77yM5YWo6YOo6K+35rGC5a6M5q+V5LmL5ZCO5Zue6LCDXG4gICAgLy8gUHJvbWlzZS5yYWNlOiDkuInkuKror7fmsYLlvZPkuK3mnInkuIDkuKror7fmsYLlrozmr5XlsLHlm57osINcbiAgICBQcm9taXNlLmFsbChbZGV0YWlsLCBjb21tZW50cywgbGlrZVN0YXR1c10pLnRoZW4oKHJlczogYW55KSA9PiB7XG4gICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICBib29rOiByZXNbMF0sXG4gICAgICAgIGNvbW1lbnRzOiByZXNbMV0uY29tbWVudHMsXG4gICAgICAgIGxpa2VTdGF0dXM6IHJlc1syXS5saWtlX3N0YXR1cyxcbiAgICAgICAgbGlrZUNvdW50OiByZXNbMl0uZmF2X251bXNcbiAgICAgIH0pXG4gICAgICB3eC5oaWRlTG9hZGluZygpXG4gICAgfSlcblxuICAgIC8vIGRldGFpbC50aGVuKChyZXM6IGFueSkgPT4ge1xuICAgIC8vICAgdGhpcy5zZXREYXRhKHtcbiAgICAvLyAgICAgYm9vazogcmVzXG4gICAgLy8gICB9KVxuICAgIC8vIH0pXG5cbiAgICAvLyBjb21tZW50cy50aGVuKChyZXM6IGFueSkgPT4ge1xuICAgIC8vICAgdGhpcy5zZXREYXRhKHtcbiAgICAvLyAgICAgY29tbWVudHM6IHJlcy5jb21tZW50c1xuICAgIC8vICAgfSlcbiAgICAvLyB9KVxuXG4gICAgLy8gbGlrZVN0YXR1cy50aGVuKChyZXM6IGFueSkgPT4ge1xuICAgIC8vICAgdGhpcy5zZXREYXRhKHtcbiAgICAvLyAgICAgbGlrZVN0YXR1czogcmVzLmxpa2Vfc3RhdHVzLFxuICAgIC8vICAgICBsaWtlQ291bnQ6IHJlcy5mYXZfbnVtc1xuICAgIC8vICAgfSlcbiAgICAvLyB9KVxuICB9LFxuXG4gIG9uTGlrZSAoZXZlbnQ6IGFueSkge1xuICAgIGNvbnN0IGxpa2VPckNhbmNsZSA9IGV2ZW50LmRldGFpbC5iZWhhdmlvclxuICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YS5ib29rKVxuICAgIGxpa2VNb2RlbC5saWtlKGxpa2VPckNhbmNsZSwgdGhpcy5kYXRhLmJvb2suaWQsIDQwMClcbiAgfSxcblxuICBvbkZha2VQb3N0IChldmVudDogYW55KSB7XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIHBvc3Rpbmc6IHRydWVcbiAgICB9KVxuICB9LFxuXG4gIG9uQ2FuY2VsIChldmVudDogYW55KSB7XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIHBvc3Rpbmc6IGZhbHNlXG4gICAgfSlcbiAgfSxcblxuICBvblBvc3QgKGV2ZW50OiBhbnkpIHtcbiAgICBjb25zdCBjb21tZW50ID0gZXZlbnQuZGV0YWlsLnRleHQgfHwgZXZlbnQuZGV0YWlsLnZhbHVlXG5cbiAgICBpZiAoIWNvbW1lbnQpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmIChjb21tZW50Lmxlbmd0aCA+IDEyKSB7XG4gICAgICB3eC5zaG93VG9hc3Qoe1xuICAgICAgICB0aXRsZTogJ+efreivhOacgOWkmjEy5Liq5a2XJyxcbiAgICAgICAgaWNvbjogJ25vbmUnXG4gICAgICB9KVxuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGJvb2tNb2RlbC5wb3N0Q29tbWVudCh0aGlzLmRhdGEuYm9vay5pZCwgY29tbWVudCkudGhlbigocmVzOiBhbnkpID0+IHtcbiAgICAgIHd4LnNob3dUb2FzdCh7XG4gICAgICAgIHRpdGxlOiAnKyAxJyxcbiAgICAgICAgaWNvbjogJ25vbmUnXG4gICAgICB9KVxuXG4gICAgICB0aGlzLmRhdGEuY29tbWVudHMudW5zaGlmdCh7XG4gICAgICAgIGNvbnRlbnQ6IGNvbW1lbnQsXG4gICAgICAgIG51bXM6IDFcbiAgICAgIH0pXG5cbiAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgIGNvbW1lbnRzOiAgdGhpcy5kYXRhLmNvbW1lbnRzLFxuICAgICAgICBwb3N0aW5nOiBmYWxzZVxuICAgICAgfSlcbiAgICB9KVxuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWIneasoea4suafk+WujOaIkFxuICAgKi9cbiAgb25SZWFkeTogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5pi+56S6XG4gICAqL1xuICBvblNob3c6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdoumakOiXj1xuICAgKi9cbiAgb25IaWRlOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLljbjovb1cbiAgICovXG4gIG9uVW5sb2FkOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog6aG16Z2i55u45YWz5LqL5Lu25aSE55CG5Ye95pWwLS3nm5HlkKznlKjmiLfkuIvmi4nliqjkvZxcbiAgICovXG4gIG9uUHVsbERvd25SZWZyZXNoOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog6aG16Z2i5LiK5ouJ6Kem5bqV5LqL5Lu255qE5aSE55CG5Ye95pWwXG4gICAqL1xuICBvblJlYWNoQm90dG9tOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55So5oi354K55Ye75Y+z5LiK6KeS5YiG5LqrXG4gICAqL1xuICBvblNoYXJlQXBwTWVzc2FnZTogZnVuY3Rpb24gKCkge1xuXG4gIH1cbn0pIl19